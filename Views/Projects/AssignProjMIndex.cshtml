@model IEnumerable<TitanTracker.Models.Project>
@using TitanTracker.Models.Enums

@using Microsoft.AspNetCore.Identity
@using TitanTracker.Services.Interfaces
@inject IBTFileService BTFileService
@inject IBTProjectService BTProjectService
@inject IBTTicketService BTTicketService
@inject UserManager<BTUser> UserManager

@{
    BTUser btUser = await UserManager.GetUserAsync(User);
    //BTUser projectManager = await ProjectService.GetProjectManagerAsync(Model.ProjectId);
    //BTUser developer = await TicketService.GetTicketDeveloperAsync(Model.Id);
}

<h1>All Company Projects</h1>

<h1>Assign Project Manager Index</h1>

<h3>@User.IsInRole(Roles.Admin.ToString())</h3>
<header class="page-header">
    <h2>
        @*@((await UserManager.GetRolesAsync(btUser))[0])*@
        @{
            foreach (var role in await UserManager.GetRolesAsync(btUser))
            {
                @role
            }
        }
        | Assign Project Manager
    </h2>
    <div>
        <a class="sidebar-right-toggle" data-open="sidebar-right"><i class="fas fa-chevron-left"></i></a>
    </div>
</header>

<table class="table" method="post" enctype="multipart/form-data">
    <thead>
        <tr>
            <th>
                Project Pic
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EndDate)
            </th>
            <th>
                Project Options
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FileContentType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Archived)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Company)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectPriority)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @if (item.FileData != null)
                    {
                        <img id="imageFileData" style="width:40px; height:40px" class="img-fluid img-thumbnail" src="data:image/*;base64, @(Convert.ToBase64String(item.FileData))" alt="" />
                    }
                    else
                    {
                        <img id="imageFileData" style="width:40px; height:40px " class="img-flud img-thumbnail rounded" style="object-fit:cover" src="~/img/Placeholder.png" />
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EndDate)
                </td>
                <td>
                    @if (await BTProjectService.GetProjectManagerAsync(item.Id) != null)
                    {
                        BTUser projectManager = await BTProjectService.GetProjectManagerAsync(item.Id);
                        < span > @projectManager.PreferredName </ span>

                    }
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info btn-xs">Details</a>

                    @if ((User.IsInRole(Roles.Admin.ToString())) || User.IsInRole(Roles.ProgramManager.ToString()))
                    {
                        <a asp-action="AssignProjM" asp-route-id="@item.Id" class="btn btn-info btn-xs">Add Project Manager</a>
                    }
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Archived)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Company.Name)
                </td>
                <td>
                    @item.ProjectPriority.ToString()
                </td>
            </tr>
        }
    </tbody>
</table>